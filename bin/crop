#!/bin/env python3
# -*- coding: utf-8 -*-
# Author: Ryan Scott Brown <sb@ryansb.com>
# License: Apache v2.0
"""
Usage: crop [--debug] [--config=<FILE>] product
       crop [-c <FILE>] update-product
       crop [--debug] update-product [--version <VERSION>]
       crop [--debug] update-product [--version <VERSION>] [--description <DESC>]
       crop [--config=<FILE>] update-product [--description <DESC>]

Create and update Service Catalog products based on Serverless Framework projects.

Arguments:

Options:
  -c FILE --config=FILE    path (absolute or relative) to config file [default: ./crop.yml]
  --debug                  turn on debug-level logging (this is really verbose)
  --description=DESC       provide a description to be attached to the artifact [default: Deployed by CROP]
  --version=VERSION        specify the name of the version that will be uploaded [default: 2]
"""

import json, sys, six
from docopt import docopt

import crop
from crop.logging import log


if __name__ == '__main__':
    arguments = docopt(__doc__)
    if arguments['--debug']:
        import logging
        logging.getLogger().setLevel(logging.DEBUG)
        for logger in ('boto3', 'botocore', 'requests'):
            # Skip logging for dependencies
            logging.getLogger(logger).setLevel(logging.WARNING)

    log.debug('cli.invoke', executable=__file__, options=arguments)

    config = crop.configure(arguments['--config'])
    if isinstance(config, six.text_type):
        print(json.dumps({'error': config}))
        sys.exit(1)

    if arguments.get('update-product', False):
        print(json.dumps(crop.commands.update_product(config, arguments)))
    else:
        print(json.dumps({}))
